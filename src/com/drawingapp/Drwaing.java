package com.drawingapp;


import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class Drwaing extends javax.swing.JFrame {

    /**
     * Creates new form Drwaing
     */
    public Drwaing() {
        initComponents();
        
        //DrawCircle circle=new DrawCircle();
        //circle.paintComponent(this.jPanel1.getGraphics());
        //circle.Draw_Circle(this, 50, 310, 110);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        tfLocationX = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfLocationY = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfRadius = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfColorR = new javax.swing.JTextField();
        tfColorB = new javax.swing.JTextField();
        tfColorG = new javax.swing.JTextField();
        lError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Drawing App");
        setLocation(new java.awt.Point(300, 100));
        setMinimumSize(new java.awt.Dimension(500, 500));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 255, 0), null));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );

        jButton1.setText("Draw It");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        tfLocationX.setText("0");
        tfLocationX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLocationXActionPerformed(evt);
            }
        });

        jLabel1.setText("Location");

        tfLocationY.setText("0");

        jLabel2.setText("Radius");

        tfRadius.setText("0");

        jLabel3.setText("Color");

        tfColorR.setText("0");

        tfColorB.setText("0");

        tfColorG.setText("0");

        lError.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lError.setForeground(new java.awt.Color(255, 0, 51));
        lError.setText("No Error");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfLocationX, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfLocationY, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfColorR, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfColorG, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfColorB, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfRadius)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfLocationX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLocationY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfColorR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfColorG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfColorB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addComponent(jButton1)
                        .addGap(48, 48, 48)
                        .addComponent(lError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        //Graphics2D g= (Graphics2D)this.jPanel1.getGraphics();
        
       // Shape circle = new Ellipse2D.Double(100, 100, 100, 100);
        //g.draw(circle);
        boolean isException=false;
        DrawCircle d=new DrawCircle(); 
        CirclePojo circle=new CirclePojo();
        try{
            circle.setX(Integer.parseInt(this.tfLocationX.getText())); // set circle x axis
            circle.setY(Integer.parseInt(this.tfLocationY.getText())); // set circle y axis
        }
        catch(NumberFormatException e){
            this.lError.setText("Location must be an integer"); // set display error message value
            isException=true;
        }
        try{
            int r=Integer.parseInt(this.tfRadius.getText());
            circle.setRadius(r); // set radius of circle
            
            if(r<1){
                isException=true;
                this.lError.setText("Radius must be greater than 0");
            }
        }
        catch(NumberFormatException e){
            this.lError.setText("Radius must be an integer");
            isException=true;
        }
        Color color=null;
        try{
            int colorR=Integer.parseInt(this.tfColorR.getText());
            int colorG=Integer.parseInt(this.tfColorG.getText());
            int colorB=Integer.parseInt(this.tfColorB.getText());
            color=new Color(colorR,colorG,colorB);
        }
        catch(NumberFormatException e){
            this.lError.setText("Color must be an integer");
            e.printStackTrace();
            isException=true;
        }
        catch(Exception e){
            this.lError.setText("Color must be in range 0 to 255");
            e.printStackTrace();
            isException=true;
        }
        if(!isException){
            d.DrawCircle((Graphics2D)this.jPanel1.getGraphics(),circle,color);
            this.lError.setText("No Error");
        }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void tfLocationXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLocationXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLocationXActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        int x=evt.getX(); // mouse clicked x axis
        int y=evt.getY(); // mouse clicked y axis
        System.out.println("X: "+x+" Y:"+y);
        boolean isException=false;
        DrawCircle d=new DrawCircle();
        CirclePojo circle=new CirclePojo();
        try{
            circle.setX(x); // set circle x axis
            circle.setY(y); // set circle y axis
        }
        catch(NumberFormatException e){
            this.lError.setText("Location must be an integer"); // set error message value
            isException=true;
        }
        try{
            int r=Integer.parseInt(this.tfRadius.getText());
            circle.setRadius(r); // set radius
            
            if(r<1){
                isException=true;
                this.lError.setText("Radius must be greater than 0");
            }
        }
        catch(NumberFormatException e){
            this.lError.setText("Radius must be an integer");
            isException=true;
        }
        Color color=null;
        try{
            int colorR=Integer.parseInt(this.tfColorR.getText());
            int colorG=Integer.parseInt(this.tfColorG.getText());
            int colorB=Integer.parseInt(this.tfColorB.getText());
            color=new Color(colorR,colorG,colorB);
        }
        catch(NumberFormatException e){
            this.lError.setText("Color must be an integer");
            e.printStackTrace();
            isException=true;
        }
        catch(Exception e){
            this.lError.setText("Color must be in range 0 to 255");
            e.printStackTrace();
            isException=true;
        }
        if(!isException){
            d.DrawCircle((Graphics2D)this.jPanel1.getGraphics(),circle,color);
            
            this.lError.setText("No Error");
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        int x=evt.getX(); // mouse clicked x axis
        int y=evt.getY(); // mouse clicked y axis
        System.out.println("X: "+x+" Y:"+y);
        boolean isException=false;
        DrawCircle d=new DrawCircle();
        CirclePojo circle=new CirclePojo();
        try{
            circle.setX(x); // set circle x axis
            circle.setY(y); // set circle y axis
        }
        catch(NumberFormatException e){
            this.lError.setText("Location must be an integer"); // set error message value
            isException=true;
        }
        try{
            int r=Integer.parseInt(this.tfRadius.getText());
            circle.setRadius(r); // set radius
            
            if(r<1){
                isException=true;
                this.lError.setText("Radius must be greater than 0");
            }
        }
        catch(NumberFormatException e){
            this.lError.setText("Radius must be an integer");
            isException=true;
        }
        Color color=null;
        try{
            int colorR=Integer.parseInt(this.tfColorR.getText());
            int colorG=Integer.parseInt(this.tfColorG.getText());
            int colorB=Integer.parseInt(this.tfColorB.getText());
            color=new Color(colorR,colorG,colorB);
        }
        catch(NumberFormatException e){
            this.lError.setText("Color must be an integer");
            e.printStackTrace();
            isException=true;
        }
        catch(Exception e){
            this.lError.setText("Color must be in range 0 to 255");
            e.printStackTrace();
            isException=true;
        }
        if(!isException){
            d.DrawCircle((Graphics2D)this.jPanel1.getGraphics(),circle,color);
            
            this.lError.setText("No Error");
        }
        
    }//GEN-LAST:event_jPanel1MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Drwaing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Drwaing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Drwaing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Drwaing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Drwaing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lError;
    private javax.swing.JTextField tfColorB;
    private javax.swing.JTextField tfColorG;
    private javax.swing.JTextField tfColorR;
    private javax.swing.JTextField tfLocationX;
    private javax.swing.JTextField tfLocationY;
    private javax.swing.JTextField tfRadius;
    // End of variables declaration//GEN-END:variables
}
